{"version":3,"file":"lazy-images.js","sources":["lazy-images.js"],"sourcesContent":["(function() {\n    document.body.classList.remove('hide-images');\n\n    // Check if an img was already loaded\n    function isImageLoaded(img) {\n        if (!img.complete || img.naturalWidth === 0) {\n            return false;\n        }\n    \n        return true;\n    }    \n\n    // Improve how native lazy loaded image appear (hide alt text while loading, then fade in )\n    function fadeImages(images) {\n        images.forEach(function(image) {\n            if (isImageLoaded(image)) {\n                return;\n            }\n\n            function showImage() {\n                image.classList.toggle(\"gh-card-image-invisible\", false);\n                image.classList.toggle(\"gh-card-image-fadein\", true);\n            }\n    \n            image.classList.add(\"gh-card-image-invisible\");\n    \n            image.onload = function() {\n                showImage();\n            }\n    \n            image.onerror = function() {\n                showImage();\n            }\n        });\n    }\n\n    // Run on page load\n    const images = document.querySelectorAll(\".home-template .gh-card-image img\");\n    fadeImages(images);\n\n    // Run again on pagination (use MutationObserver to check when new elements are added to post feed)\n\n    const feedElement = document.querySelector('.home-template .gh-feed');\n    const loadMoreBtn = document.querySelector(\".home-template .gh-loadmore\");\n\n    if (!feedElement || !loadMoreBtn || !window.MutationObserver) {\n        return;\n    }\n\n    const observer = new MutationObserver(function(mutationsList, observer) {\n        for(const mutation of mutationsList) {\n            if (mutation.type === 'childList') {\n                if (mutation.addedNodes) {\n                    mutation.addedNodes.forEach(function(element) {\n                        const images = element.querySelectorAll(\".gh-card-image img\");\n                        fadeImages(images);\n                    });\n                }\n\n                // Disconnect if the loadMoreBtn was removed (we reached last page)\n                if (!loadMoreBtn || !loadMoreBtn.parentElement) {\n                    observer.disconnect();\n                }\n            }\n        }\n    });\n\n    observer.observe(feedElement, { childList: true });\n})();"],"names":["fadeImages","images","forEach","image","img","showImage","classList","toggle","complete","naturalWidth","add","onload","onerror","document","body","remove","querySelectorAll","feedElement","querySelector","loadMoreBtn","window","MutationObserver","observer","mutationsList","mutation","type","addedNodes","element","parentElement","disconnect","observe","childList"],"mappings":"CAAA,WAaI,SAASA,EAAWC,GAChBA,EAAOC,QAAQ,SAASC,GACpB,IAXeC,EAef,SAASC,IACLF,EAAMG,UAAUC,OAAO,2BAA2B,GAClDJ,EAAMG,UAAUC,OAAO,wBAAwB,IAjBpCH,EAWGD,GAVbK,UAAiC,IAArBJ,EAAIK,eAmBrBN,EAAMG,UAAUI,IAAI,2BAEpBP,EAAMQ,OAAS,WACXN,KAGJF,EAAMS,QAAU,WACZP,QA9BZQ,SAASC,KAAKR,UAAUS,OAAO,eAqC/Bf,EADea,SAASG,iBAAiB,sCAKzC,IAAMC,EAAcJ,SAASK,cAAc,2BAC3C,MAAMC,EAAcN,SAASK,cAAc,+BAE3C,GAAKD,GAAgBE,GAAgBC,OAAOC,iBAA5C,CAIA,MAAMC,EAAW,IAAID,iBAAiB,SAASE,EAAeD,GAC1D,IAAI,MAAME,KAAYD,EACI,cAAlBC,EAASC,OACLD,EAASE,YACTF,EAASE,WAAWxB,QAAQ,SAASyB,GAEjC3B,EADe2B,EAAQX,iBAAiB,yBAM3CG,GAAgBA,EAAYS,eAC7BN,EAASO,gBAMzBP,EAASQ,QAAQb,EAAa,CAAEc,WAAW,KAnE/C"}