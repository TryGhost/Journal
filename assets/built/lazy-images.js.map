{"version":3,"file":"lazy-images.js","sources":["lazy-images.js"],"sourcesContent":["(function() {\r\n    document.body.classList.remove('hide-images');\r\n\r\n    // Check if an img was already loaded\r\n    function isImageLoaded(img) {\r\n        if (!img.complete || img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n    \r\n        return true;\r\n    }    \r\n\r\n    // Improve how native lazy loaded image appear (hide alt text while loading, then fade in )\r\n    function fadeImages(images) {\r\n        images.forEach(function(image) {\r\n            if (isImageLoaded(image)) {\r\n                return;\r\n            }\r\n\r\n            function showImage() {\r\n                image.classList.toggle(\"gh-card-image-invisible\", false);\r\n                image.classList.toggle(\"gh-card-image-fadein\", true);\r\n            }\r\n    \r\n            image.classList.add(\"gh-card-image-invisible\");\r\n    \r\n            image.onload = function() {\r\n                showImage();\r\n            }\r\n    \r\n            image.onerror = function() {\r\n                showImage();\r\n            }\r\n        });\r\n    }\r\n\r\n    // Run on page load\r\n    const images = document.querySelectorAll(\".home-template .gh-card-image img\");\r\n    fadeImages(images);\r\n\r\n    // Run again on pagination (use MutationObserver to check when new elements are added to post feed)\r\n\r\n    const feedElement = document.querySelector('.home-template .gh-feed');\r\n    const loadMoreBtn = document.querySelector(\".home-template .gh-loadmore\");\r\n\r\n    if (!feedElement || !loadMoreBtn || !window.MutationObserver) {\r\n        return;\r\n    }\r\n\r\n    const observer = new MutationObserver(function(mutationsList, observer) {\r\n        for(const mutation of mutationsList) {\r\n            if (mutation.type === 'childList') {\r\n                if (mutation.addedNodes) {\r\n                    mutation.addedNodes.forEach(function(element) {\r\n                        const images = element.querySelectorAll(\".gh-card-image img\");\r\n                        fadeImages(images);\r\n                    });\r\n                }\r\n\r\n                // Disconnect if the loadMoreBtn was removed (we reached last page)\r\n                if (!loadMoreBtn || !loadMoreBtn.parentElement) {\r\n                    observer.disconnect();\r\n                }\r\n            }\r\n        }\r\n    });\r\n\r\n    observer.observe(feedElement, { childList: true });\r\n})();"],"names":["fadeImages","images","forEach","image","img","showImage","classList","toggle","complete","naturalWidth","add","onload","onerror","document","body","remove","querySelectorAll","feedElement","querySelector","loadMoreBtn","window","MutationObserver","mutationsList","observer","mutation","type","addedNodes","element","parentElement","disconnect","observe","childList"],"mappings":"AAAA,CAAA,WAaI,SAASA,EAAWC,GAChBA,EAAOC,QAAQ,SAASC,GACpB,IAXeC,EAef,SAASC,IACLF,EAAMG,UAAUC,OAAO,0BAA2B,CAAA,CAAK,EACvDJ,EAAMG,UAAUC,OAAO,uBAAwB,CAAA,CAAI,CACvD,EAlBeH,EAWGD,GAVbK,UAAiC,IAArBJ,EAAIK,eAmBrBN,EAAMG,UAAUI,IAAI,yBAAyB,EAE7CP,EAAMQ,OAAS,WACXN,EAAU,CACd,EAEAF,EAAMS,QAAU,WACZP,EAAU,CACd,EACJ,CAAC,CACL,CAjCAQ,SAASC,KAAKR,UAAUS,OAAO,aAAa,EAqC5Cf,EADea,SAASG,iBAAiB,mCAAmC,CAC3D,EADjB,IAKMC,EAAcJ,SAASK,cAAc,yBAAyB,EACpE,MAAMC,EAAcN,SAASK,cAAc,6BAA6B,EAEnED,GAAgBE,GAAgBC,OAAOC,kBAI3B,IAAIA,iBAAiB,SAASC,EAAeC,GAC1D,IAAI,MAAMC,KAAYF,EACI,cAAlBE,EAASC,OACLD,EAASE,YACTF,EAASE,WAAWxB,QAAQ,SAASyB,GAEjC3B,EADe2B,EAAQX,iBAAiB,oBAAoB,CAC3C,CACrB,CAAC,EAIAG,GAAgBA,EAAYS,eAC7BL,EAASM,WAAW,EAIpC,CAAC,EAEQC,QAAQb,EAAa,CAAEc,UAAW,CAAA,CAAK,CAAC,CACpD,EAAE"}